FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
LABEL maintainer yasutomo57jp@gmail.com

RUN apt-get update && apt-get install -y --no-install-recommends \
		build-essential \
		cmake \
		git \
		wget \
		libatlas-base-dev \
		libboost-all-dev \
		libgflags-dev \
		libgoogle-glog-dev \
		libhdf5-serial-dev \
		libleveldb-dev \
		liblmdb-dev \
		libopencv-dev \
		libprotobuf-dev \
		libsnappy-dev \
		protobuf-compiler \
		python-dev \
		python-numpy \
		python-pip \
		python-setuptools \
		python-scipy && \
		rm -rf /var/lib/apt/lists/*

ENV CAFFE_ROOT=/opt/caffe
WORKDIR $CAFFE_ROOT

# FIXME: use ARG instead of ENV once DockerHub supports this
# https://github.com/docker/hub-feedback/issues/460
ENV CLONE_TAG=1.0

RUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . && \
pip install --upgrade pip && \
cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. && \
git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j install && cd .. && rm -rf nccl && \
mkdir build && cd build && \
cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 .. && \
make -j"$(nproc)"

ENV PYCAFFE_ROOT $CAFFE_ROOT/python
ENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH
ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig

# for alcon
RUN apt update
RUN apt install -y wget cmake libboost-all-dev
RUN apt install -y python3 python3-pip libpython3-dev libpython-dev

# python install
RUN pip install numpy scipy ipython scikit-learn scikit-image matplotlib opencv tensorflow-gpu keras chainer theano h5py
RUN pip3 install numpy scipy ipython scikit-learn scikit-image matplotlib opencv tensorflow-gpu keras chainer theano h5py

# opencv install
RUN apt install -y libopencv-dev
RUN apt remove -y libopencv-dev
RUN wget -O opencv-3.2.0.tar.gz https://github.com/opencv/opencv/archive/3.2.0.tar.gz
RUN tar zxvf opencv-3.2.0.tar.gz
RUN cd opencv-3.2.0 && mkdir build && cd build && cmake .. -DWITH_CUDA=off && make -j8 && make install
RUN echo "/usr/local/lib" > /etc/ld.so.conf.d/local.conf
RUN ldconfig

WORKDIR /alcon
